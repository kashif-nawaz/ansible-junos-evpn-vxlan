/* This block of configuration has been generated by the role overlay-evpn-qfx-l3 for Ansible */

{% if 'leaf' in group_names %}
protocols {
    evpn {
        encapsulation vxlan;
        extended-vni-list [{% for ten in INFRA_NW %}  {{ ten.vni }} {% endfor %}];
        multicast-mode ingress-replication;
        vni-options {
{% for ten in INFRA_NW %}
            vni {{ten.vni }} {
                vrf-target  {{ten.rt}};
            }
{% endfor %}
        }
    }
}

switch-options {
      vtep-source-interface lo0.0;
      route-distinguisher {{underlay.loopback_ip}}:{{id}};
      vrf-import PL-LEAF-IN;
      vrf-target target:9999:9999;
  }


{% for ten in INFRA_NW %}
{% if ten.L3_if is defined %}
interfaces {
{# Configuration for Anycast Gateway #}
    irb {
        unit {{ ten.vni }} {
            description " {{ten.vlan_name}} "
            family inet {
                address {{ ten.L3_if.anycast_gw}};
                }
            }

   }
}

{% if ten.vrf is defined %}
{# Configure L3 VRF per tenant #}
routing-instances {
    VRF_{{ten.vlan_name}} {
        instance-type vrf;
        interface irb.{{ ten.vni }};
        route-distinguisher {{ overlay.loopback_ip }}:{{ten.vni}};
        vrf-table-label;
        vrf-target target:{{overlay_as}}:{{ten.vni}};
        protocols {
        evpn {
            ip-prefix-routes {
                advertise direct-nexthop;
                encapsulation vxlan;
                vni {{ten.vni+ten.vni}};
            }
        }
    }
  }
}
{% endif %}

{% endif %}
{% endfor %}

vlans {
{% for ten in INFRA_NW %}
      {{ten.vlan_name}} {
        vlan-id {{ ten.vni }};
{% if ten.L3_if is defined %}
        l3-interface irb.{{ ten.vni }};
{% endif %}
        vxlan {
            vni {{ ten.vni }};
            ingress-node-replication;
        }
    }
{% endfor %}
}



policy-options {
     policy-statement PL-LEAF-IN {
{% for VN in INFRA_NW %}
        term import_vni_{{ VN.vni }} {
            from community {{ VN.rt }};
            then accept;
        }
{% if VN.MODE=='CRB' %}
{% if VN.CRB_VS is defined %}

        term import_VS_{{ VN.CRB_VS }} {
            from community CRB_VS_{{ VN.CRB_VS}};
            then accept;
        }

{% else %}

       term import_CRB_DEFAULT_VS {
            from community crb_global_rt;
            then accept;
        }
{% endif  %}

{% endif %}
{% endfor %}
        term default {
            then reject;
        }
    }
{% for RT in INFRA_NW %}
    community {{RT.rt}} members {{RT.rt }};
{% if RT.MODE=='CRB' %}
{% if RT.CRB_VS is defined %}

    community CRB_VS_{{RT.CRB_VS}} members {{RT.CRB_VS_RT}}; 

{% else %}

    community crb_global_rt members target:{{overlay_as}}:{{crb_global_rt}};
{% endif %}
{% endif %}

{% endfor %}
}



{% elif 'spine' in group_names %}

{% for vs in crb_vs %}
routing-instances {
    VS_{{ vs.name}} {
        vtep-source-interface lo0.0;
        instance-type virtual-switch;
        route-distinguisher {{underlay.loopback_ip}}:{{vs.RT}};
        vrf-import VS_{{vs.name}}_IN;
        vrf-target target:{{overlay_as}}:{{vs.RT}};
        protocols {
            evpn {
                remote-ip-host-routes;
                encapsulation vxlan;
	        extended-vni-list [{% for ten in INFRA_NW %} {% if ten.CRB_VS is defined and ten.CRB_VS==vs.name %} {{ ten.vni }} {% endif %}{% endfor %}];
                vni-options {
{% for ten in INFRA_NW %}
{% if ten.CRB_VS is defined and ten.CRB_VS==vs.name %}
                    vni {{ten.vni }} {
                        vrf-target {{ten.rt}};
                    }
{% endif %}
{% endfor %}
                }
                default-gateway no-gateway-community;
            }
        }
        vlans {
{% for bd in INFRA_NW %}
{% if bd.CRB_VS is defined and bd.CRB_VS==vs.name %}
            {{bd.vlan_name}} {
                vlan-id {{ bd.vni }};
{% if bd.L3_if is defined  %}
                l3-interface irb.{{ bd.vni }};
{% endif %}				
                vxlan {
                    vni {{ bd.vni }};
                    ingress-node-replication;
                }	    
            }
{% endif %}
{% endfor %}
        }
    }
{% endfor %}
}

routing-instances {
{% for ten in INFRA_NW %}
{% if ten.L3_if is defined and ten.vrf is defined %}
   {{ten.vrf}} {
        instance-type vrf;
{% if ten.L3_if is defined %}
        interface irb.{{ten.vni}};
{% endif %}
{% if ten.NORTH_IF is defined %}
        interface {{nw.NORTH_IF.PHY_IF}}.{{nw.NORTH_IF.VLAN}};
{% endif %}
        route-distinguisher {{underlay.loopback_ip}}:{{ten.vni}};
        vrf-import VRF_{{ten.vlan_name}}_import;
        vrf-export VRF_{{ten.vlan_name}}_export;
        vrf-table-label;
        protocols {
{% if ten.NORTH_IF is defined %}
        bgp {
        group to-nc21 {
            export VRF_{{nw.vlan_name}}_nc21_export;
            remove-private;
            peer-as {{nw.NORTH_IF.PEER_AS}};
            local-as {{nw.NORTH_IF.LoCAL_AS}};
            neighbor {{nw.NORTH_IF.NBR}};
            }
        }
{% endif %}
        evpn {
            ip-prefix-routes {
                advertise direct-nexthop;
                encapsulation vxlan;
                vni {{ten.vni+ten.vni}};
            }
        }
    }
  }
{% endif %}
{% endfor %}
}


interfaces {
{% for ten in INFRA_NW %}
{% if ten.NORTH_IF is defined %}
  {{ten.NORTH_IF.PHY_IF}} {
      vlan-tagging;
      unit {{ten.NORTH_IF.VLAN}} {
          vlan-id {{ten.NORTH_IF.VLAN}};
          family inet {
              address {{ten.NORTH_IF.IP}};
          }
      }
  }
{% endif %}
{% if ten.L3_if is defined %}
    irb {
        mtu 9100;
        unit {{ten.vni}} {
            proxy-macip-advertisement;
            virtual-gateway-accept-data;
            family inet {    
                address {{ten.L3_if.IRB_IP}} {
                    virtual-gateway-address {{ten.L3_if.anycast_gw}};
                }
            }
            virtual-gateway-v4-mac 00:a0:a0:a0:00:a0;
        }
    }
{% endif %}
{% endfor %}
}

policy-options {
{% if crb_vs is defined %}
{% for vs in crb_vs %}
 policy-statement VS_{{vs.name}}_IN {
        term sw-comm {
            from community CM-LEAF-ESI;
            then accept;
        }
{% for ten in INFRA_NW %}
{% if ten.CRB_VS is defined and ten.CRB_VS==vs.name %}
        term VNI_{{ten.vlan_name}}_import {
            from community VS_{{ten.vlan_name}};
            then accept;
        }
{% endif %}
{% endfor %}
        term last-term {
            then reject;
        }
    }
{% endfor %}
}
{% endif %}

{% if crb_global_rt is defined and crb_global_rt!=None %}

 protocols {
    evpn {
       vni-options {
{% for ten in INFRA_NW %}
{% if ten.CRB_VS is not defined %}
           vni {{ten.vni}} {
               vrf-target {{ten.rt}};
           }
{% endif %}
{% endfor %}
       }
       encapsulation vxlan;
       multicast-mode ingress-replication;
       default-gateway no-gateway-community;
       extended-vni-list [{% for ten in INFRA_NW %} {% if ten.CRB_VS is not defined %} {{ten.vni}} {% endif %} {% endfor %}];
   }
   }

 switch-options {
      vtep-source-interface lo0.0;
      route-distinguisher {{underlay.loopback_ip}}:{{crb_global_rt}};
      vrf-import PL-LEAF-IN;
      vrf-target target:9999:9999;
  }

 vlans {
{% for ten in INFRA_NW %}
{% if ten.CRB_VS is not defined %}
       {{ten.vlan_name}} {
            vlan-id {{ten.vni}};
{% if ten.L3_if is defined %}
            l3-interface irb.{{ten.vni}};
{% endif %}
            vxlan {
                vni {{ten.vni}};
               }
           }
{% endif %}
{% endfor %}
       }


policy-options {
 policy-statement PL-LEAF-IN {
       term sw-comm {
            from community CM-LEAF-ESI;
            then accept;
        }
{% for ten in INFRA_NW %}
{% if ten.CRB_VS is not defined  %}
        term VNI_{{ten.vlan_name}}_import {
            from community VS_{{ten.vlan_name}};
            then accept;
        }
{% endif %}
{% endfor %}
        term last-term {
            then reject;
        }
}
}


policy-options {

{% for ten in INFRA_NW %}

{% if ten.NORTH_IF is defined %}
policy-statement VRF_{{ten.vlan_name}}_nc21_export {
    term 1 {
      from {
          route-filter {{ten.L3_if.IRB_IP | ipaddr('subnet')}} exact;
      }
      then accept;
  }
  }
{% endif %]

{% if ten.vrf is defined and  ten.L3_if is defined %}
    policy-statement VRF_{{ten.vlan_name}}_export {
        term 1 {
            then {
                community add VRF_{{ten.vlan_name}};
                accept;
            }
        }
    }
    policy-statement VRF_{{ten.vlan_name}}_import {
        term 1 {
            from community VRF_{{ten.vlan_name}};
            then accept;
        }
    }
{% endif %}
{% endfor %}

  community CM-LEAF-ESI members target:9999:9999;
{% for ten in INFRA_NW %}
  community VS_{{ten.vlan_name}} members {{ten.rt}};
  community VRF_{{ten.vlan_name}} members target:{{overlay_as}}:{{ten.vni}};
{% endfor %}

}



{% endif %}
