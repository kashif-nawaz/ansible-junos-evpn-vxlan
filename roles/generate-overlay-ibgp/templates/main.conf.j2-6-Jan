/* This block of configuration has been generated by the role overlay-evpn-qfx-l3 for Ansible */
routing-options {
    autonomous-system {{overlay.overlay_asn}};
    router-id {{ overlay.loopback_ip }};

    forwarding-table {
        ecmp-fast-reroute;
    }
}
protocols {
    bgp {
{# Configure BGP Peers for EVPN using iBGP #}
        group OVERLAY {
            type internal;
            family evpn {
                signaling;
            }
            local-address {{ overlay.loopback_ip }};
            multipath;
{% for neighbor in overlay.neighbors %}
            neighbor {{neighbor}};
{% endfor %}
{% if overlay.cluster_id is defined %}
            cluster {{ overlay.cluster_id }};
{% endif %}
            bfd-liveness-detection {
            minimum-interval {{ overlay.bfd.min_interval }};
            multiplier {{ overlay.bfd.multiplier }};
            session-mode {{ overlay.bfd.mode }};
        }
     }
{# If Device is configured as Route Reflector #}
{% if overlay.cluster_id is defined %}
        group OVERLAY-RR {
            type internal;
            family evpn {
                signaling;
            }
            family inet-vpn {
                unicast;
            }
            export pol-set-udp-encaps;
            vpn-apply-export;
            local-address {{ overlay.loopback_ip }};
            multipath;
{% for neighbor in overlay.rr_gp %}
            neighbor {{ neighbor }};
{% endfor %}
            bfd-liveness-detection {
            minimum-interval {{ overlay.bfd.min_interval }};
            multiplier {{ overlay.bfd.multiplier }};
            session-mode {{ overlay.bfd.mode }};
        }
        }
{% endif %}
{% if 'spine' in group_names %}
{% if CONTRAIL_CONTROLLERS is defined and CONTRAIL_CONTROLLERS[0].IP !=None %}
        group CONTRAIL {
            type internal;
            local-address {{underlay.loopback_ip}};
            family inet-vpn {
                unicast;
            }
            family evpn {
                signaling;
            }
            family inet6-vpn {
                unicast;
            }
            family route-target {
                external-paths 255;
                advertise-default;
            }
            export [ nhs pol-set-udp-encaps ];
            vpn-apply-export;
            cluster {{CONTRAIL_CLUSTER_ID}};
            no-client-reflect;
{% for con in CONTRAIL_CONTROLLERS %}
            neighbor {{con.IP}} {
                description {{con.DESCRIPTION}};
{% endfor %}
            }           
        }

{% endif %}		
{% endif %}
}
}
{% if 'spine' in group_names %}
interfaces {
{% for IF in underlay.neighbors %}
{{IF.interface}} {
    unit 0 {
        family mpls;
          }
    }
{% endfor %}
}
protocols {
 mpls {
{% for IF in underlay.neighbors %}
        interface {{IF.interface}}.0;
{% endfor %}
    }
}

policy-options {
policy-statement nhs {
        term 1 {
            from family inet-vpn;
            then {
                next-hop self;
            }
        }
        term 2 {
            from family inet6-vpn;
            then {
                next-hop self;
            }
        }
    }
    policy-statement pol-set-udp-encaps {
        term inet-vpn {
            from family inet-vpn;
            then {
                community add com-encaps-udp;
                accept;
            }
        }
        term inet6-vpn {
            from family inet6-vpn;
            then {
                community add com-encaps-udp;
                accept;
            }
        }
    }
community com-encaps-udp members 0x030c:{{overlay_as}}:13; 
}
{% endif %}
