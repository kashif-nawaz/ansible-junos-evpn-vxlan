/* This block of configuration has been generated by the role underlay-ebgp for Ansible */

protocols {
    bgp {
        log-updown;
        graceful-restart;
        replace:
        group underlay {
            export  bgp-ipclos-out;
{% if 'leaf' in group_names %}
            import bgp-ipclos-in;
{% endif %}
            type external;
            mtu-discovery;
            local-as {{ underlay.local.asn }};
            multipath multiple-as;
{% for neighbor in underlay.neighbors %}
            neighbor {{ neighbor.peer_ip }} {
                peer-as {{ neighbor.asn }};
            }
{% endfor %}
        }
    }
}

routing-options {
    router-id {{ underlay.loopback_ip }};
    forwarding-table {
        export pfe-ecmp;
    }
}

policy-options {
    policy-statement pfe-ecmp {
        then {
            load-balance per-packet;
        }
    }


{% if 'leaf' in group_names %}
    policy-statement bgp-ipclos-out {
        term loopback {
            from {
                protocol direct;
                route-filter {{ underlay.loopback_ip }}/32 exact;
            }
            then {
                accept;
            }
        }
{%  for ten in INFRA_NW %}
{% if ten.RE_DISTI_Underlay is sameas true %} 
        term {{ten.vlan_name}} {
            from {
                route-filter {{ten.L3_if.anycast_gw | ipaddr('subnet')}} longer;

            }
            then {
                accept;
            }
        }
{% endif %}
{% endfor %}
       term reject {
         then reject;
           }
    }
   
    policy-statement bgp-ipclos-in {
        term loopbacks {
            from {
                route-filter {{ loopbacks }} orlonger;
            }
            then {
                accept;
             }
        }
        term reject {
         then reject;
           }
    }
{% else %}
    policy-statement bgp-ipclos-out {
        term loopback {
            from {
                route-filter {{ loopbacks }} orlonger;
            }
            then {
                accept;
            }
        }
    }

{% endif %}
}

